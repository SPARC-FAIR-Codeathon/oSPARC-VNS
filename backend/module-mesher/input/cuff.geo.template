
SetFactory("OpenCASCADE");



// get template parameters
cuff_len = $cuff_length;
cuff_IDy = $cuff_IDy;
cuff_IDx = $cuff_IDx;
cuff_IDr = $cuff_IDr;

cuff_ODy = $cuff_IDy + 2*$cuff_thickness;
cuff_ODx = $cuff_IDx + 2*$cuff_thickness;
cuff_ODr = $cuff_IDr + $cuff_thickness;

// Geometry of the outer box
Box(1) = {-cuff_len/2, -cuff_ODy/2, -cuff_ODx/2, cuff_len,     cuff_ODy,    cuff_ODx};
If (cuff_ODr > 0)
	Fillet{1}{9, 10, 11, 12}{cuff_ODr}
EndIf

// Geometry of the inner box
Box(2) = {-cuff_len/2, -cuff_IDy/2, -cuff_IDx/2, cuff_len,    cuff_IDy,    cuff_IDx};
If (cuff_IDr > 0)
  If (cuff_ODr > 0)
	Fillet{2}{33,34,35,36}{cuff_IDr}
  Else
	Fillet{2}{21,22,23,24}{cuff_IDr}
  EndIf
EndIf

BooleanDifference{ Volume{1}; Delete; }{ Volume{2}; Delete; }


// Execute electrode import script
@[mesh.insert_gmsh_electrodes('elec-geom.mat')]

// vol_id = newv;
// Box(vol_id) = {-5.0,-2.0,-5.0, 10.0, 2.31, 10.0}; // Interstitial
// Box(vol_id+1) = {-5.0,0.31,-5.0, 10.0, 1.69, 10.0}; // Prostate

// Execute spline script 
@[mesh.insert_gmsh_fascicles]

// Mesh.RemeshParametrization = 7;
Mesh.CharacteristicLengthMax = $exterior_len;
Mesh.CharacteristicLengthMin = 0.0005;
Mesh.MaxRetries = 3;
Coherence; // Clean up rounding errors.